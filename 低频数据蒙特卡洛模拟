#（1）读入日收益率数据r
setwd("C:/Users/62678/Desktop") 
M2005.d=read.csv("M2005.d.csv")
require("xts")
M2005.d.zoo=read.zoo("M2005.d.csv",header=TRUE,sep=",")
M2005.d.xts=as.xts(M2005.d.zoo)  #得到时间序列
M2005.r<-diff(log(M2005.d.xts))   #计算日收益率
r=M2005.r[-1]

 #（1）GARCH的mu和sigma预测（i从1到10）
 library(rugarch)
 data_temp <- r[(i):(206+i)]                 #i从1到10
 ug_spec<- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)), 
                        mean.model = list(armaOrder = c(0, 0)))                           #标准GARCH模型，sGARCH模型，且均值模型为白噪声
 ugfit <- ugarchfit(ug_spec, data = data_temp)  
coef(ugfit)
fit_temp <- ugarchforecast(ugfit, data = data_temp, n.ahead = T)            #T从10到1

#（2）EARCH的mu和sigma预测（i从1到10）
 library(rugarch)
 data_temp <- r[(i):(206+i)]                 #i从1到10
  ug_spec<- ugarchspec(variance.model = list(model = "eGARCH", garchOrder = c(1, 1)), 
                        mean.model = list(armaOrder = c(0, 0)))    # 指数GARCH模型，EGARCH
 ugfit <- ugarchfit(ug_spec, data = data_temp)  
coef(ugfit)
fit_temp <- ugarchforecast(ugfit, data = data_temp, n.ahead = T)            #T从10到1

#（3）TARCH的mu和sigma预测（i从1到10）
 library(rugarch)
 data_temp <- r[(i):(206+i)]                 #i从1到10
ug_spec<- ugarchspec(variance.model = list(model = "fGARCH", submodel="TGARCH",garchOrder = c(1, 1)), 
                        mean.model = list(armaOrder = c(0, 0)))     # 门限GARCH模型，TGARCH
 ugfit <- ugarchfit(ug_spec, data = data_temp)  
coef(ugfit)
fit_temp <- ugarchforecast(ugfit, data = data_temp, n.ahead = T)            #T从10到1


##GARCH蒙特卡洛期权定价
S_0 = 2943.0   #可调    
K = 3200.0        
T = 10              #可调  
r = 0.0175/365
I = 1000 
sigma1= 0.02270266        #可调  
sigma2=0.02237338
sigma3=0.02197747
sigma4=0.02167372
sigma5=0.02135179
sigma6=0.02092588
sigma7=0.0202167
sigma8=0.02046854
sigma9=0.02032215
sigma10=0.02022029
mu=0.0001604073              #可调  
z = rnorm(I)
S_1 = S_0 * exp(mu+(sigma1)*z)            #可调  
S_2 = S_1 * exp(mu+(sigma2)*z)
S_3 = S_2 * exp(mu+(sigma3)*z)
S_4 = S_3 * exp(mu+(sigma4)*z)
S_5 = S_4 * exp(mu+(sigma5)*z)
S_6 = S_5 * exp(mu+(sigma6)*z)
S_7 = S_6 * exp(mu+(sigma7)*z)
S_8 = S_7 * exp(mu+(sigma8)*z)
S_9 = S_8 * exp(mu+(sigma9)*z)
S_10 = S_9 * exp(mu+(sigma10)*z)

zero=rep(0,I)
h_T = mapply(max,K-S_10,zero)             #可调  
P = exp(-r * T)* sum(h_T)/I
P        


##EGARCH蒙特卡洛期权定价
S_0 = 2793.0   #可调    
K = 3200.0        
T = 0          #可调  
r = 0.0175/365
I = 1000 
sigma1= 0.02270266        #可调  
sigma2=0.02237338
sigma3=0.02197747
sigma4=0.02167372
sigma5=0.02135179
sigma6=0.02092588
sigma7=0.0202167
sigma8=0.02046854
sigma9=0.02032215
sigma10=0.02022029
mu=0.00003213573      #可调  
z = rnorm(I)         #可调  
S_1 = S_0 * exp(mu+(sigma1)*z)            #可调  
S_2 = S_1 * exp(mu+(sigma2)*z)
S_3 = S_2 * exp(mu+(sigma3)*z)
S_4 = S_3 * exp(mu+(sigma4)*z)
S_5 = S_4 * exp(mu+(sigma5)*z)
S_6 = S_5 * exp(mu+(sigma6)*z)
S_7 = S_6 * exp(mu+(sigma7)*z)
S_8 = S_7 * exp(mu+(sigma8)*z)
S_9 = S_8 * exp(mu+(sigma9)*z)
S_10 = S_9 * exp(mu+(sigma10)*z)
zero=rep(0,I)            
h_T = mapply(max,K-S_10,zero)      #可调
S_1 = S_0 * exp(mu+(sigma1)*z)            #可调  
S_2 = S_1 * exp(mu+(sigma2)*z)
S_3 = S_2 * exp(mu+(sigma3)*z)
S_4 = S_3 * exp(mu+(sigma4)*z)
S_5 = S_4 * exp(mu+(sigma5)*z)
S_6 = S_5 * exp(mu+(sigma6)*z)
S_7 = S_6 * exp(mu+(sigma7)*z)
S_8 = S_7 * exp(mu+(sigma8)*z)
S_9 = S_8 * exp(mu+(sigma9)*z)
S_10 = S_9 * exp(mu+(sigma10)*z)     #可调  
zero=rep(0,I)
h_TA = mapply(max,K-S_10,zero)             #可调  
P = exp(-r * T)* sum((h_T+h_TA )/2)/I
P        
  
##TGARCH和EGARCH一样


#对比期权价格
setwd("C:/Users/62678/Desktop") 
Cprice=read.csv("Cprice.csv")
View(Cprice)
require("xts")
Cprice.zoo=read.zoo("Cprice.csv",header=TRUE,sep=",")
Cprice.xts=as.xts(Cprice.zoo)    #得到时间序列
plot(Cprice$close,type="l",col="black",main="M2005-P-3200",xlab="Time",ylab="Price",lwd=2)
lines(Cprice$GARCH,type="l",col="blue",lwd=2);lines(Cprice$EGARCH,type="l",col="red",lwd=2);lines(Cprice$TGARCH,type="l",col="green",lwd=2)
legend("topright",legend=c("price","GARCH","EGARCH","TARCH"),col=c("black","blue","red","green"),lty=1,lwd=2)      

MSE=mean((Cprice$close-Cprice$GARCH)^2)
MAE=mean(abs(Cprice$close-Cprice$GARCH))
RMSE=sqrt(MSE)
MAPE=mean(abs((Cprice$GARCH-Cprice$close)/Cprice$close))*100
SMAPE=mean(abs(Cprice$GARCH-Cprice$close)/(abs(Cprice$GARCH)+abs(Cprice$close)/2))*100
HMSE=mean((1-Cprice$GARCH/Cprice$close)^2)
HMAE=mean(abs(1-Cprice$GARCH/Cprice$close))
QLIKE=mean(log(Cprice$GARCH)+Cprice$close/Cprice$GARCH)
RLOG=mean((log(Cprice$close/Cprice$GARCH))^2)
MSE
MAE
RMSE
MAPE
SMAPE
HMSE
HMAE
QLIKE
RLOG

MSE=mean((Cprice$TGARCH-Cprice$close)^2)
MSE
MAE=mean(abs(Cprice$TGARCH-Cprice$close))
MAE
RMSE=sqrt(MSE)
RMSE
MAPE=mean(abs((Cprice$TGARCH-Cprice$close)/Cprice$close))*100
MAPE
SMAPE=mean(abs(Cprice$TGARCH-Cprice$close)/(abs(Cprice$TGARCH)+abs(Cprice$close)/2))*100
SMAPE
